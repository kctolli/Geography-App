{
  "version": 3,
  "sources": ["<stdin>", "../../app/entry.server.tsx", "../../app/root.tsx", "../../app/routes/geoapi.ts", "../../app/routes/index.tsx", "../../app/components/Nav/index.tsx", "../../app/components/Page/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    headers: responseHeaders,\n    status: responseStatusCode,\n  });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Geography App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "type CountryInfo = {\n    name: string;\n    official: string;\n    flag: string;\n    capital: string;\n    population: number;\n    map: string;\n    region: string;\n    subregion: string;\n};\n\nexport async function getInfoByCountryCode(countryCode: string): Promise<CountryInfo> {\n    const countryData = await getDataByCountryCode(countryCode);\n\n    //console.log(countryData);\n\n    return {\n        name: countryData?.name?.common,\n        official: countryData?.name?.official,\n        flag: countryData?.flag,\n        capital: countryData?.capital[0],\n        population: countryData?.population,\n        map: countryData?.maps?.googleMaps,\n        region: countryData?.region,\n        subregion: countryData?.subregion,\n    }\n}\n\nasync function getDataByCountryCode(countryCode: string): Promise<any> {\n    const countryUrl = `https://restcountries.com/v3.1/alpha/${countryCode}`;\n    \n    const countryData = (await fetch(countryUrl)\n        .then((res) => res.json())\n        .catch(console.log))[0];\n\n    delete countryData?.translations;   \n    delete countryData?.flags;\n    delete countryData?.idd;\n    delete countryData?.coatOfArms;\n    delete countryData?.gini;\n\n    return countryData;\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { Page } from \"~/components/Page\";\nimport { getInfoByCountryCode } from \"./geoapi\";\n\nexport async function loader({ request }: LoaderArgs) {\n    const url = new URL(request.url);\n    const country = url.searchParams.get(\"countryCode\");\n\n    return country ? getInfoByCountryCode(country) : { };\n}\n\nexport default function Index() {\n    const { \n        name, \n        official, \n        flag, \n        capital,\n        population,\n        map,\n        region,\n        subregion \n    } = useLoaderData<typeof loader>();\n\n    return (\n        <Page>\n            <section style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n                <Form method=\"get\" action=\".\">\n                    <label>\n                        Enter country code:{\" \"}\n                        <input\n                        type=\"text\"\n                        name=\"countryCode\"\n                        id=\"countryCode\"\n                        placeholder=\"Country Code\"\n                        />\n                    </label> {\" \"}\n                    <button type=\"submit\">Get Country Info</button>\n                    <br />\n                </Form>\n                <br /><hr />\n                <article>\n                    {name && official && <h4>Country Name: {name} ({official} {flag}) </h4>}\n                    {capital && <p>Country Capital: {capital} </p>}\n                    {population && <p>Country Population: {population}</p>}\n                    {map && region && subregion && \n                        <p>\n                            Country Location: {region} - {subregion} {\" \"}\n                            (<a href={map}>Map Link</a>)\n                        </p>\n                    }\n                </article>\n                <footer>\n                    <br /><hr />\n                    \u00A9 {(new Date()).getFullYear()} Kyle Tolliver -- Geography App\n                </footer>\n            </section>\n        </Page>\n    );\n}\n", "import styles from \"./styles.module.css\";\n\nexport function Nav() {\n  return (<h1 className={styles.nav}>Geography App</h1>);\n}\n", "import type { ReactNode } from \"react\";\nimport { Nav } from \"../Nav\";\nimport styles from \"./styles.module.css\";\n\nexport function Page({ children }: { children: ReactNode }) {\n  return (\n    <div className={styles.page}>\n      <Nav />\n      <div className={styles.container}>{children}</div>\n    </div>\n  );\n}\n", "export default {'version':'61fa7c62','entry':{'module':'/build/entry.client-LDJ64GLW.js','imports':['/build/_shared/chunk-OID5GZRI.js','/build/_shared/chunk-5KL4PAQL.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GQ3UFWUQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/geoapi':{'id':'routes/geoapi','parentId':'root','path':'geoapi','index':undefined,'caseSensitive':undefined,'module':'/build/routes/geoapi-PNOJ47VI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-JKJV2JG6.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'hmr':undefined,'url':'/build/manifest-61FA7C62.js'};", "\nimport * as entryServer from \"/Users/kctolli/Geography-App/app/entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/geoapi.ts\";\nimport * as route2 from \"./routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_cssModules\":false,\"unstable_cssSideEffectImports\":false,\"unstable_dev\":false,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"unstable_vanillaExtract\":false,\"v2_errorBoundary\":false,\"v2_meta\":false,\"v2_routeConvention\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  \n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/geoapi\": {\n      id: \"routes/geoapi\",\n      parentId: \"root\",\n      path: \"geoapi\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "styles_module_default", "import_jsx_dev_runtime"]
}
